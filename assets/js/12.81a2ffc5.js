(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{560:function(_,v,s){"use strict";s.r(v);var t=s(6),a=Object(t.a)({},(function(){var _=this,v=_.$createElement,s=_._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("h1",{attrs:{id:"_1-资源的合并与压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-资源的合并与压缩"}},[_._v("#")]),_._v(" 1. 资源的合并与压缩")]),_._v(" "),s("blockquote",[s("p",[s("strong",[_._v("请求过程中一些潜在的性能优化点")]),_._v("：")]),_._v(" "),s("ul",[s("li",[_._v("dns 是否可以通过缓存减少 dns 查询时间？")]),_._v(" "),s("li",[_._v("网络请求的过程走最近的网络环境？")]),_._v(" "),s("li",[_._v("相同的静态资源是否可以缓存？")]),_._v(" "),s("li",[_._v("能否减少请求 http 请求大小？")]),_._v(" "),s("li",[_._v("减少 http 请求")]),_._v(" "),s("li",[_._v("服务端渲染")])])]),_._v(" "),s("h2",{attrs:{id:"google-首页案例学习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#google-首页案例学习"}},[_._v("#")]),_._v(" google 首页案例学习")]),_._v(" "),s("h3",{attrs:{id:"html-压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html-压缩"}},[_._v("#")]),_._v(" html 压缩")]),_._v(" "),s("h4",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[_._v("#")]),_._v(" 概念")]),_._v(" "),s("p",[_._v("HTML 代码压缩就是压缩这些在文本文件中有意义，但是在 HTML 中"),s("u",[_._v("不显示")]),_._v("的字符，包括"),s("u",[_._v("空格、制表符、换行符")]),_._v("等，还有一些其他意义的字符，如 "),s("u",[_._v("HTML 注释")]),_._v("也可以被压缩。")]),_._v(" "),s("h4",{attrs:{id:"方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式"}},[_._v("#")]),_._v(" 方式")]),_._v(" "),s("ol",[s("li",[_._v("使用在线网站进行压缩（真实公司项目很少使用）")]),_._v(" "),s("li",[_._v("nodejs 提供了 html-minifier 工具")]),_._v(" "),s("li",[_._v("后端模板引擎渲染压缩")])]),_._v(" "),s("h3",{attrs:{id:"css-压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-压缩"}},[_._v("#")]),_._v(" css 压缩")]),_._v(" "),s("h4",{attrs:{id:"概念-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念-2"}},[_._v("#")]),_._v(" 概念")]),_._v(" "),s("p",[_._v("对无效代码删除，css 语义合并")]),_._v(" "),s("h4",{attrs:{id:"方式-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式-2"}},[_._v("#")]),_._v(" 方式")]),_._v(" "),s("ol",[s("li",[_._v("使用在线网站进行压缩")]),_._v(" "),s("li",[_._v("使用 html-minifier 对 html 中的 css 进行压缩")]),_._v(" "),s("li",[_._v("使用 clean-css 对 css 进行压缩")])]),_._v(" "),s("h3",{attrs:{id:"js-压缩与混乱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-压缩与混乱"}},[_._v("#")]),_._v(" JS 压缩与混乱")]),_._v(" "),s("h4",{attrs:{id:"概念-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念-3"}},[_._v("#")]),_._v(" 概念")]),_._v(" "),s("ol",[s("li",[_._v("对无效字符的删除；")]),_._v(" "),s("li",[_._v("剔除注释；")]),_._v(" "),s("li",[_._v("代码语义的缩减和优化（用a、b等变量名替换长变量名，减少代码量；对重复代码进行优化，如对变量连续赋值，那么中间的赋值代码将会被省略）；")]),_._v(" "),s("li",[_._v("代码保护（不让别人轻易看懂代码，从而做出一些伤害网站的事情）")])]),_._v(" "),s("h4",{attrs:{id:"方式-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式-3"}},[_._v("#")]),_._v(" 方式")]),_._v(" "),s("ol",[s("li",[_._v("使用在线网站进行压缩")]),_._v(" "),s("li",[_._v("使用 html-minifier 对 html 中的 js 进行压缩")]),_._v(" "),s("li",[_._v("使用 uglifyjs2 对 js 进行压缩")])]),_._v(" "),s("h3",{attrs:{id:"文件合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件合并"}},[_._v("#")]),_._v(" 文件合并")]),_._v(" "),s("h4",{attrs:{id:"不合并请求的缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不合并请求的缺点"}},[_._v("#")]),_._v(" 不合并请求的缺点")]),_._v(" "),s("ul",[s("li",[_._v("文件与文件之间有插入的上行请求，增加了 n-1 个网络延迟")]),_._v(" "),s("li",[_._v("受丢包问题影响更严重")]),_._v(" "),s("li",[_._v("经过代理服务器时可能会被断开")])]),_._v(" "),s("h4",{attrs:{id:"合并文件存在的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并文件存在的问题"}},[_._v("#")]),_._v(" 合并文件存在的问题")]),_._v(" "),s("ul",[s("li",[_._v("首屏渲染问题\n"),s("ul",[s("li",[_._v("如果将 js 文件合并后，首屏渲染需要的 js 文件也被合并了，（合并后的 js 文件比合并前的 js 文件大），那么首屏渲染则需要等待到该合并后的 js 文件加载完毕后才能开始渲染，延长了渲染时间")])])]),_._v(" "),s("li",[_._v("缓存失效问题\n"),s("ul",[s("li",[_._v("合并前的 js 文件，a.js 文件改动只会导致 a.js 文件缓存失效而不会影响到其他 js 文件；合并后的 js 文件，只要一个有改动，其他 js 文件的缓存也跟着失效。")])])])]),_._v(" "),s("h4",{attrs:{id:"建议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建议"}},[_._v("#")]),_._v(" 建议")]),_._v(" "),s("ol",[s("li",[_._v("公共库合并")]),_._v(" "),s("li",[_._v("不同页面的合并，如 spa，单独打包每个页面的 js 文件，当路由映射到某个页面的时候才开始加载对应的 js 文件")]),_._v(" "),s("li",[_._v("见机行事，随机应变")])]),_._v(" "),s("h4",{attrs:{id:"方式-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式-4"}},[_._v("#")]),_._v(" 方式")]),_._v(" "),s("ol",[s("li",[_._v("使用在线网站进行文件合并")]),_._v(" "),s("li",[_._v("使用 nodejs 实现文件合并")])]),_._v(" "),s("h1",{attrs:{id:"_2-图片相关的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-图片相关的优化"}},[_._v("#")]),_._v(" 2. 图片相关的优化")]),_._v(" "),s("ul",[s("li",[_._v("jpg —— 有损压缩图片")]),_._v(" "),s("li",[_._v("png8 —— 256 色 + 支持透明")]),_._v(" "),s("li",[_._v("png24 —— 2^24 色 + 不支持透明")]),_._v(" "),s("li",[_._v("png32 —— 2^24 色 + 支持透明")]),_._v(" "),s("li",[_._v("每种图片格式都有自己的特点，针对不同的业务场景选择不同的图片格式很重要")])]),_._v(" "),s("h2",{attrs:{id:"不同格式图片常用的业务场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不同格式图片常用的业务场景"}},[_._v("#")]),_._v(" 不同格式图片常用的业务场景")]),_._v(" "),s("ul",[s("li",[_._v("jpg 有损压缩，压缩率高，不支持透明\n"),s("ul",[s("li",[_._v("大部分不需要透明图片的业务场景")])])]),_._v(" "),s("li",[_._v("png 支持透明，浏览器兼容好\n"),s("ul",[s("li",[_._v("大部分需要透明图片的业务场景")])])]),_._v(" "),s("li",[_._v("webp 压缩程度更好，在 ios webview 有兼容性问题\n"),s("ul",[s("li",[_._v("安卓全部")])])]),_._v(" "),s("li",[_._v("svg 矢量图，代码内嵌，相对较小，图片样式相对简单的场景\n"),s("ul",[s("li",[_._v("图片样式相对简单的业务场景")])])])]),_._v(" "),s("h2",{attrs:{id:"优化技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化技术"}},[_._v("#")]),_._v(" 优化技术")]),_._v(" "),s("ul",[s("li",[_._v("图片压缩\n"),s("ul",[s("li",[_._v("针对真实图片情况，舍弃一些相对无关紧要的色彩信息")])])]),_._v(" "),s("li",[_._v("CSS 雪碧图\n"),s("ul",[s("li",[_._v("把你的网站上用到的一些图片整合到一张单独的图片中（现在很少使用雪碧图），来减少你的网站的 http 请求数量")]),_._v(" "),s("li",[s("strong",[_._v("缺点")]),_._v("：整合图片比较大时，一次加载比较慢，可能会加载失败导致需要使用该图片的地方无法正常显示。")])])]),_._v(" "),s("li",[_._v("Image inline\n"),s("ul",[s("li",[_._v("将图片内容内嵌到 html 当中（base64），减少你的网站的 http 请求数量")])])]),_._v(" "),s("li",[_._v("使用矢量图\n"),s("ul",[s("li",[_._v("使用 SVG 进行矢量图的绘制，使用 iconfont 解决 icon 问题")])])]),_._v(" "),s("li",[_._v("在安卓下使用 webp\n"),s("ul",[s("li",[_._v("webp 的优势体现在它具有更优的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼无法识别无差异的图像质量；同时具备了无损和有损的压缩模式、Alpha 透明以及动画的特性，在 JPEG 和 PNG 上的转化效果都非常优秀、稳定和统一。")])])])]),_._v(" "),s("h1",{attrs:{id:"_3-css和js的装载与执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-css和js的装载与执行"}},[_._v("#")]),_._v(" 3.css和js的装载与执行")]),_._v(" "),s("h2",{attrs:{id:"一个网站在浏览器中如何进行渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个网站在浏览器中如何进行渲染"}},[_._v("#")]),_._v(" 一个网站在浏览器中如何进行渲染？")]),_._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/performance/image-20211211152702046.png",alt:"image-20211211152702046"}})]),_._v(" "),s("p",[_._v("html 页面加载渲染的过程 👆")]),_._v(" "),s("ul",[s("li",[s("strong",[_._v("html首先会被解析成dom树")]),_._v(" "),s("ul",[s("li",[_._v("html 会被我们通过网址请求回来的，请求过来的数据本身是一个字节流，然后就有一个字节流转换成字符流这个过程。")]),_._v(" "),s("li",[_._v("在浏览器端拿到的是一个字符流，通过浏览器的词法分析后，把相应的语法分析成相应的token，然后将这些token添加到dom树中。")]),_._v(" "),s("li",[_._v("html解析特点："),s("span",{staticStyle:{color:"blue","font-weight":"bold"}},[_._v("从上到下")]),_._v("对html文档解析，html标签【生成token，类型starttag类型】-head标签-body标签。")]),_._v(" "),s("li",[_._v("在这个过程中可能会通过link或其他方式引入资源，这时候浏览器就会并发地请求资源")])])]),_._v(" "),s("li",[_._v("请求过来的资源可能是"),s("strong",[_._v("css，那么就对css进行解析生成cssom树木，结合dom树生成 render tree，进行布局、绘制。")])])]),_._v(" "),s("h2",{attrs:{id:"html-渲染过程的一些特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html-渲染过程的一些特点"}},[_._v("#")]),_._v(" html 渲染过程的一些特点")]),_._v(" "),s("ul",[s("li",[_._v("顺序执行、并发加载")]),_._v(" "),s("li",[_._v("是否阻塞")]),_._v(" "),s("li",[_._v("依赖关系")]),_._v(" "),s("li",[_._v("引入方式")])]),_._v(" "),s("h2",{attrs:{id:"顺序执行、并发加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序执行、并发加载"}},[_._v("#")]),_._v(" 顺序执行、并发加载")]),_._v(" "),s("ul",[s("li",[_._v("词法分析\n"),s("ul",[s("li",[_._v("它的词法分析的token获取过程是从上到下的，导致了整个html解析过程是从上到下的，所以整个html是被顺序执行的")])])]),_._v(" "),s("li",[_._v("并发加载\n"),s("ul",[s("li",[_._v("html中引入的外部资源是并发请求的")])])]),_._v(" "),s("li",[_._v("并发上限\n"),s("ul",[s("li",[_._v("某个域名下它的并发请求数是有上限的")])])])]),_._v(" "),s("h2",{attrs:{id:"css阻塞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css阻塞"}},[_._v("#")]),_._v(" css阻塞")]),_._v(" "),s("ul",[s("li",[_._v("css head中阻塞页面的"),s("strong",[_._v("渲染")]),_._v(" "),s("ul",[s("li",[_._v("通过link引入，页面要呈现出效果需要等待这个link引入的css加载完后才能开始渲染")])])]),_._v(" "),s("li",[_._v("css阻塞js的"),s("strong",[_._v("执行")]),_._v(" "),s("ul",[s("li",[_._v("js的执行可能会依赖于当前css的一些属性，如果css没有正常加载完，js执行就可能会出现问题")])])]),_._v(" "),s("li",[_._v("css不阻塞外部脚本的"),s("strong",[_._v("加载")]),_._v(" "),s("ul",[s("li",[_._v("webkit实际上有一个预先扫描器，它会预先扫描后面的资源，然后利用预资源加载器请求这些资源")])])])]),_._v(" "),s("h2",{attrs:{id:"js-阻塞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-阻塞"}},[_._v("#")]),_._v(" js 阻塞")]),_._v(" "),s("ul",[s("li",[_._v("直接引入的js阻塞页面的渲染\n"),s("ul",[s("li",[_._v("js可能动态更改文档结构，文档结构会有相应的变化，所以页面的渲染需要等待到js执行之后才进行")]),_._v(" "),s("li",[_._v("不阻塞方案，添加async和defer")])])]),_._v(" "),s("li",[_._v("js不阻塞资源的加载")]),_._v(" "),s("li",[_._v("js顺序执行2，阻塞后面js逻辑的执行")])]),_._v(" "),s("h1",{attrs:{id:"_4-懒加载和预加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-懒加载和预加载"}},[_._v("#")]),_._v(" 4. 懒加载和预加载")]),_._v(" "),s("h2",{attrs:{id:"懒加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#懒加载"}},[_._v("#")]),_._v(" 懒加载")]),_._v(" "),s("p",[s("strong",[_._v("概念")])]),_._v(" "),s("ul",[s("li",[_._v("延迟加载")]),_._v(" "),s("li",[_._v("图片进入可视区域之后才请求图片资源")]),_._v(" "),s("li",[_._v("对于电商等图片很多，页面很长的业务场景适用")]),_._v(" "),s("li",[_._v("减少"),s("strong",[_._v("无效资源")]),_._v("的加载")]),_._v(" "),s("li",[_._v("并发加载的资源过多会阻塞js的加载，影响网站的正常使用")])]),_._v(" "),s("h2",{attrs:{id:"预加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预加载"}},[_._v("#")]),_._v(" 预加载")]),_._v(" "),s("p",[s("strong",[_._v("概念")])]),_._v(" "),s("ul",[s("li",[_._v("提前加载")]),_._v(" "),s("li",[_._v("图片等静态资源在使用之前的提前请求")]),_._v(" "),s("li",[_._v("资源使用到时能从缓存中加载，提升用户体验")]),_._v(" "),s("li",[_._v("页面展示的依赖关系维护")])]),_._v(" "),s("p",[s("strong",[_._v("方法")])]),_._v(" "),s("ol",[s("li",[_._v("先把图片用css的方法隐藏起来，要用的时候显示就可以了")]),_._v(" "),s("li",[_._v("new Image 对象的方式")]),_._v(" "),s("li",[_._v("xmlhttprequest 的方式\n"),s("ol",[s("li",[_._v("优点：更加精细的控制整个预加载的过程")]),_._v(" "),s("li",[_._v("缺点：跨域问题")])])])]),_._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[_._v("#")]),_._v(" 总结")]),_._v(" "),s("p",[_._v("平衡浏览器资源加载的能力，浏览器忙碌的时候就延迟加载资源，空闲的时候就加载主要资源。")])])}),[],!1,null,null,null);v.default=a.exports}}]);