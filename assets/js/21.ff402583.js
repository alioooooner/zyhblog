(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{569:function(s,t,a){"use strict";a.r(t);var n=a(6),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" Git")]),s._v(" "),a("h2",{attrs:{id:"_1-git-和-svn-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-和-svn-的区别"}},[s._v("#")]),s._v(" 1. git 和 svn 的区别")]),s._v(" "),a("ol",[a("li",[s._v("git 和 svn 最大的区别在于 "),a("strong",[s._v("git 是分布式的，而 svn 是集中式的")]),s._v("。因此我们不能再离线的情况下使用 svn。如果服务器出现问题，就没有办法使用 svn 来提交代码。")]),s._v(" "),a("li",[s._v("svn 中的分支是整个版本库的复制的一份完整目录，而 git 的分支是指针指向某次提交，因此 git 的分支创建更加开销更小并且分支上的变化不会影响到其他人。svn 的分支变化会影响到所有的人。")]),s._v(" "),a("li",[s._v("svn 的指令相对于 git 来说要简单一些，比 git 更容易上手。")]),s._v(" "),a("li",[s._v("**GIT把内容按元数据方式存储，而SVN是按文件：**因为git目录是处于个人机器上的一个克隆版的版本库，它拥有中心版本库上所有的东西，例如标签，分支，版本记录等。")]),s._v(" "),a("li",[s._v("**GIT分支和SVN的分支不同：**svn 会发生分支遗漏的情况，而 git 可以同一个工作目录下快速的在几个分支间切换，很容易发现未被合并的分支，简单而快捷的合并这些文件。")]),s._v(" "),a("li",[a("strong",[s._v("GIT没有一个全局的版本号，而SVN有")])]),s._v(" "),a("li",[s._v("**GIT的内容完整性要优于SVN：**GIT 的内容存储使用的是 SHA-1 哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏")])]),s._v(" "),a("h2",{attrs:{id:"_2-经常使用的-git-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-经常使用的-git-命令"}},[s._v("#")]),s._v(" 2. 经常使用的 git 命令")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新建代码库")]),s._v("\ngit init                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化 git 代码库")]),s._v("\ngit clone\t\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 拷贝一份远程仓库，也就是下载一个项目")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 增加/删除文件")]),s._v("\ngit add                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 添加指定文件到暂存区")]),s._v("\ngit rm                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 删除工作区文件，并且将这次删除放入暂存区")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 代码提交")]),s._v("\ngit commit "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("m "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 提交暂存区到仓库区")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分支")]),s._v("\ngit branch                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 列出所有分支")]),s._v("\ngit checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新建一个分支，并切换到该分支")]),s._v("\ngit merge "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 合并指定分支到当前分支")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查看信息")]),s._v("\ngit status                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 显示有变更文件的状态")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 远程同步")]),s._v("\ngit fetch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("remote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下载远程仓库的所有变动")]),s._v("\ngit remote add "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("shortname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 增加一个新的远程仓库，并命名")]),s._v("\ngit pull "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("remote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 取回远程仓库的变化，并与本地分支合并")]),s._v("\ngit push "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("remote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 上传本地指定分支到远程仓库")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 撤销")]),s._v("\ngit checkout "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t\t \t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 恢复暂存区的指定文件到工作区")]),s._v("\ngit checkout "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("commit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 恢复某个commit的指定文件到暂存区和工作区")]),s._v("\ngit checkout\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 恢复暂存区的所有文件到工作区")]),s._v("\n\ngit stash\ngit stash pop\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 暂时将未提交的变化移除，稍后再移入")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])]),a("h2",{attrs:{id:"_3-git-pull-和-git-fetch-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-git-pull-和-git-fetch-的区别"}},[s._v("#")]),s._v(" 3. git pull 和 git fetch 的区别")]),s._v(" "),a("ul",[a("li",[s._v("git fetch 只是将远程仓库的变化拉到本地，没有与本地分支合并")]),s._v(" "),a("li",[s._v("git pull 将远程仓库的变化拉到本地并于当前分支合并，"),a("code",[s._v("git pull = git fetch + git merge")]),s._v("，这可能会产生冲突，需要手动解决")])]),s._v(" "),a("h2",{attrs:{id:"_4-git-rebase-和-git-merge-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-git-rebase-和-git-merge-的区别"}},[s._v("#")]),s._v(" 4. git rebase 和 git merge 的区别")]),s._v(" "),a("p",[s._v("git merge 和 git rebase 都是用于"),a("u",[s._v("分支合并")]),s._v("，关键"),a("strong",[s._v("在")]),s._v(" "),a("strong",[s._v("commit 记录的处理上不同")]),s._v("：")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("git merge")]),s._v(" 会新建一个新的 commit 对象，然后两个分支以前的 commit 记录都指向这个新 commit 记录。这种方法会保留之前每个分支的 commit 历史。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210911125614281.png",alt:"image-20210911125614281"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210911125629050.png",alt:"image-20210911125629050"}})])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("git rebase")]),s._v(" 会先找到两个分支的"),a("u",[s._v("第一个共同的 commit 祖先记录")]),s._v("，然后将提取当前分支这之后的所有 commit 记录，然后将这个 commit 记录添加到目标分支的最新提交后面。经过这个合并后，两个分支合并后的 commit 记录就变为了线性的记录了。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210911125718489.png",alt:"image-20210911125718489"}})])])]),s._v(" "),a("h1",{attrs:{id:"webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[s._v("#")]),s._v(" webpack")]),s._v(" "),a("h2",{attrs:{id:"_1-webpack-与-grunt、gulp-的不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack-与-grunt、gulp-的不同"}},[s._v("#")]),s._v(" 1. webpack 与 grunt、gulp 的不同")]),s._v(" "),a("p",[a("strong",[s._v("Grunt、Gulp是基于任务运行的⼯具")]),s._v("： 它们会⾃动执⾏指定的任务，就像流⽔线，把资源放上去然后通过不同插件进⾏加⼯，它们包含活跃的社区，丰富的插件，能⽅便的打造各种⼯作流。")]),s._v(" "),a("p",[a("strong",[s._v("Webpack是基于模块化打包的⼯具:")]),s._v(" ⾃动化处理模块，webpack把⼀切当成模块，当 webpack 处理应⽤程序时，它会递归地构建⼀个依赖关系图 (dependency graph)，其中包含应⽤程序需要的每个模块，然后将所有这些模块打包成⼀个或多个 bundle。")]),s._v(" "),a("p",[s._v("因此这是完全不同的两类⼯具,⽽现在主流的⽅式是⽤ npm script 代替Grunt、Gulp，npm script同样可以打造任务流。")]),s._v(" "),a("h2",{attrs:{id:"_2-webpack、rollup、parcel优劣"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-webpack、rollup、parcel优劣"}},[s._v("#")]),s._v(" 2. "),a("strong",[s._v("webpack")]),s._v("、"),a("strong",[s._v("rollup")]),s._v("、"),a("strong",[s._v("parcel")]),s._v("优劣？")]),s._v(" "),a("ul",[a("li",[s._v("webpack适⽤于⼤型复杂的前端站点构建: webpack有强⼤的loader和插件⽣态,打包后的⽂件实际上就是⼀个⽴即执⾏函数，这个⽴即执⾏函数接收⼀个参数，这个参数是模块对象，键为各个模块的路径，值为模块内容。⽴即执⾏函数内部则处理模块之间的引⽤，执⾏模块等,这种情况更适合⽂件依赖复杂的应⽤开发。")]),s._v(" "),a("li",[s._v("rollup适⽤于基础库的打包，如vue、d3等: Rollup 就是将各个模块打包进⼀个⽂件中，并且通过 Tree-shaking 来删除⽆⽤的代码,可以最⼤程度上降低代码体积,但是rollup没有webpack如此多的的如代码分割、按需加载等⾼级功能，其更聚焦于库的打包，因此更适合库的开发。")]),s._v(" "),a("li",[s._v("parcel适⽤于简单的实验性项⽬: 他可以满⾜低⻔槛的快速看到效果,但是⽣态差、报错信息不够全⾯都是他的硬伤，除了⼀些玩具项⽬或者实验项⽬不建议使⽤。")])]),s._v(" "),a("h2",{attrs:{id:"_3-有哪些常见的-loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-有哪些常见的-loader"}},[s._v("#")]),s._v(" 3. 有哪些常见的 loader？")]),s._v(" "),a("h3",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),a("p",[s._v("loader 用于对模块的源代码进行转换，在 import 或加载模块时"),a("u",[s._v("预处理文件")]),s._v("。")]),s._v(" "),a("p",[s._v("webpack 做的事情，仅仅是分析出各种模块的依赖关系，然后形成资源列表，最终打包生成到指定的文件中。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210911130528239.png",alt:"image-20210911130528239"}})]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("webpack")]),s._v("内部中，任何文件都是模块，不仅仅只是"),a("code",[s._v("js")]),s._v("文件")]),s._v(" "),a("p",[s._v("默认情况下，在遇到"),a("code",[s._v("import")]),s._v("或者"),a("code",[s._v("require")]),s._v("加载模块的时候，"),a("strong",[a("code",[s._v("webpack")]),s._v("只支持对"),a("code",[s._v("js")]),s._v(" 和 "),a("code",[s._v("json")]),s._v(" 文件打包")])]),s._v(" "),a("p",[s._v("像"),a("code",[s._v("css")]),s._v("、"),a("code",[s._v("sass")]),s._v("、"),a("code",[s._v("png")]),s._v("等这些类型的文件的时候，"),a("code",[s._v("webpack")]),s._v("则无能为力，这时候就"),a("strong",[s._v("需要配置对应的"),a("code",[s._v("loader")]),s._v("进行文件内容")]),s._v("的解析")]),s._v(" "),a("p",[s._v("在加载模块的时候，执行顺序如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210911130613844.png",alt:"image-20210911130613844"}})]),s._v(" "),a("p",[s._v("当 "),a("code",[s._v("webpack")]),s._v(" 碰到不识别的模块的时候，"),a("code",[s._v("webpack")]),s._v(" 会在配置的中查找该文件解析规则。")]),s._v(" "),a("p",[s._v("关于配置"),a("code",[s._v("loader")]),s._v("的方式有三种：")]),s._v(" "),a("ul",[a("li",[s._v("配置方式（推荐）：在 webpack.config.js文件中指定 loader")]),s._v(" "),a("li",[s._v("内联方式：在每个 import 语句中显式指定 loader")]),s._v(" "),a("li",[s._v("CLI 方式：在 shell 命令中指定它们")])]),s._v(" "),a("h4",{attrs:{id:"配置方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置方式"}},[s._v("#")]),s._v(" 配置方式")]),s._v(" "),a("p",[s._v("关于"),a("code",[s._v("loader")]),s._v("的配置，我们是写在"),a("code",[s._v("module.rules")]),s._v("属性中，属性介绍如下：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("rules")]),s._v("是一个数组的形式，因此我们"),a("strong",[s._v("可以配置很多个"),a("code",[s._v("loader")])])]),s._v(" "),a("li",[s._v("每一个"),a("code",[s._v("loader")]),s._v("对应一个对象的形式，对象属性"),a("code",[s._v("test")]),s._v(" 为匹配的规则，一般情况为正则表达式")]),s._v(" "),a("li",[s._v("属性"),a("code",[s._v("use")]),s._v("针对匹配到文件类型，调用对应的 "),a("code",[s._v("loader")]),s._v(" 进行处理")])]),s._v(" "),a("p",[s._v("代码编写，如下形式：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  module"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    rules"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        test"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\.css$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        use"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'style-loader'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'css-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            options"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              modules"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sass-loader'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[s._v("#")]),s._v(" 特性")]),s._v(" "),a("p",[s._v("这里继续拿上述代码，来讲讲"),a("code",[s._v("loader")]),s._v("的特性")]),s._v(" "),a("p",[s._v("从上述代码可以看到，在处理"),a("code",[s._v("css")]),s._v("模块的时候，"),a("code",[s._v("use")]),s._v("属性中配置了三个"),a("code",[s._v("loader")]),s._v("分别处理"),a("code",[s._v("css")]),s._v("文件")]),s._v(" "),a("p",[s._v("因为"),a("code",[s._v("loader")]),a("strong",[s._v("支持链式调用")]),s._v("，链中的每个"),a("code",[s._v("loader")]),a("strong",[s._v("会处理之前已处理过的资源，最终变为"),a("code",[s._v("js")]),s._v("代码")]),s._v("。"),a("strong",[a("u",[s._v("顺序为相反的顺序执行")])]),s._v("，即上述执行方式为"),a("code",[s._v("sass-loader")]),s._v("、"),a("code",[s._v("css-loader")]),s._v("、"),a("code",[s._v("style-loader")])]),s._v(" "),a("p",[s._v("除此之外，"),a("code",[s._v("loader")]),s._v("的特性还有如下：")]),s._v(" "),a("ul",[a("li",[s._v("loader 可以是同步的，也可以是异步的")]),s._v(" "),a("li",[s._v("loader 运行在 Node.js 中，并且能够执行任何操作")]),s._v(" "),a("li",[s._v("除了常见的通过 "),a("code",[s._v("package.json")]),s._v(" 的 "),a("code",[s._v("main")]),s._v(" 来将一个 npm 模块导出为 loader，还可以在 module.rules 中使用 "),a("code",[s._v("loader")]),s._v(" 字段直接引用一个模块")]),s._v(" "),a("li",[s._v("插件(plugin)可以为 loader 带来更多特性")]),s._v(" "),a("li",[s._v("loader 能够产生额外的任意文件")])]),s._v(" "),a("p",[s._v("可以通过 loader 的"),a("strong",[s._v("预处理函数")]),s._v("，为 JavaScript 生态系统提供更多能力。用户现在可以更加灵活地引入细粒度逻辑，例如：压缩、打包、语言翻译和更多其他特性。")]),s._v(" "),a("h3",{attrs:{id:"常见的-loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的-loader"}},[s._v("#")]),s._v(" 常见的 loader")]),s._v(" "),a("p",[s._v("在页面开发过程中，我们经常性加载除了"),a("code",[s._v("js")]),s._v("文件以外的内容，这时候我们就需要配置响应的"),a("code",[s._v("loader")]),s._v("进行加载（"),a("strong",[s._v("预处理")]),s._v("）")]),s._v(" "),a("p",[s._v("常见的"),a("code",[s._v("loader")]),s._v("如下：")]),s._v(" "),a("ul",[a("li",[s._v("style-loader: 将 css 添加到 DOM 的内联样式标签 style 里")]),s._v(" "),a("li",[s._v("css-loader :允许将 css 文件通过 require 的方式引入，并返回 css 代码")]),s._v(" "),a("li",[s._v("less-loader: 处理 less")]),s._v(" "),a("li",[s._v("sass-loader: 处理 sass")]),s._v(" "),a("li",[s._v("postcss-loader: 用 postcss 来处理 CSS")]),s._v(" "),a("li",[s._v("autoprefixer-loader: 处理 CSS3 属性前缀，已被弃用，建议直接使用postcss")]),s._v(" "),a("li",[s._v("file-loader: 分发文件到 output 目录并返回相对路径")]),s._v(" "),a("li",[s._v("url-loader: 和 file-loader 类似，但是当文件小于设定的 limit 时可以以 base64 的方式把文件内容注⼊到代码中去并返回一个Data Url")]),s._v(" "),a("li",[s._v("html-minify-loader: 压缩 HTML")]),s._v(" "),a("li",[s._v("babel-loader :用 babel 来转换 ES6文件到ES")]),s._v(" "),a("li",[s._v("image-loader：加载并且压缩图⽚⽂件")])]),s._v(" "),a("h2",{attrs:{id:"_4-有哪些常见的-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-有哪些常见的-plugin"}},[s._v("#")]),s._v(" 4. 有哪些常见的 plugin？")]),s._v(" "),a("h3",{attrs:{id:"概念-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-2"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),a("p",[a("code",[s._v("Plugin")]),s._v("（Plug-in）是一种"),a("strong",[s._v("计算机应用程序")]),s._v("，它和主应用程序互相交互，以"),a("strong",[s._v("提供特定的功能")]),s._v("，是一种遵循一定规范的应用程序接口编写出来的程序，只能运行在程序规定的系统下，因为其需要调用原纯净系统提供的函数库或者数据")]),s._v(" "),a("p",[a("code",[s._v("webpack")]),s._v("中的"),a("code",[s._v("plugin")]),s._v("也是如此，"),a("code",[s._v("plugin")]),s._v("赋予其各种灵活的"),a("strong",[s._v("功能")]),s._v("，例如打包优化、资源管理、环境变量注入等，它们会运行在 "),a("code",[s._v("webpack")]),s._v(" 的不同阶段（钩子 / 生命周期），贯穿了"),a("code",[s._v("webpack")]),s._v("整个编译周期")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210911131854702.png",alt:"image-20210911131854702"}})]),s._v(" "),a("p",[s._v("目的在于解决"),a("code",[s._v("loader")]),s._v(" 无法实现的其他事")]),s._v(" "),a("h4",{attrs:{id:"配置方式-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置方式-2"}},[s._v("#")]),s._v(" 配置方式")]),s._v(" "),a("p",[s._v("这里讲述文件的配置方式，一般情况，通过配置文件导出对象中"),a("code",[s._v("plugins")]),s._v("属性传入"),a("code",[s._v("new")]),s._v("实例对象。如下所示：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" HtmlWebpackPlugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'html-webpack-plugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过 npm 安装")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" webpack "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'webpack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 访问内置的插件")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n  plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("webpack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ProgressPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HtmlWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" template"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./src/index.html'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"特性-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性-2"}},[s._v("#")]),s._v(" 特性")]),s._v(" "),a("p",[s._v("其本质是一个具有"),a("code",[s._v("apply")]),s._v("方法"),a("code",[s._v("javascript")]),s._v("对象，"),a("code",[s._v("apply")]),s._v(" 方法会被 "),a("code",[s._v("webpack compiler")]),s._v("调用，并且在整个编译生命周期都可以访问 "),a("code",[s._v("compiler")]),s._v("对象。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pluginName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ConsoleLogOnBuildWebpackPlugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConsoleLogOnBuildWebpackPlugin")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("compiler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    compiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pluginName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("compilation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'webpack 构建过程开始！'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ConsoleLogOnBuildWebpackPlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[a("code",[s._v("compiler hook")]),s._v(" 的 "),a("code",[s._v("tap")]),s._v("方法的第一个参数，应是驼峰式命名的插件名称")]),s._v(" "),a("p",[s._v("关于整个编译生命周期钩子，有如下：")]),s._v(" "),a("ul",[a("li",[s._v("entry-option ：初始化 option")]),s._v(" "),a("li",[s._v("run")]),s._v(" "),a("li",[s._v("compile： 真正开始的编译，在创建 compilation 对象之前")]),s._v(" "),a("li",[s._v("compilation ：生成好了 compilation 对象")]),s._v(" "),a("li",[s._v("make 从 entry 开始递归分析依赖，准备对每个模块进行 build")]),s._v(" "),a("li",[s._v("after-compile： 编译 build 过程结束")]),s._v(" "),a("li",[s._v("emit ：在将内存中 assets 内容写到磁盘文件夹之前")]),s._v(" "),a("li",[s._v("after-emit ：在将内存中 assets 内容写到磁盘文件夹之后")]),s._v(" "),a("li",[s._v("done： 完成所有的编译过程")]),s._v(" "),a("li",[s._v("failed： 编译失败的时候")])]),s._v(" "),a("h3",{attrs:{id:"常见的-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的-plugin"}},[s._v("#")]),s._v(" 常见的 plugin")]),s._v(" "),a("ul",[a("li",[s._v("define-plugin：定义环境变量")]),s._v(" "),a("li",[s._v("html-webpack-plugin：简化html⽂件创建")]),s._v(" "),a("li",[s._v("uglifyjs-webpack-plugin：通过 UglifyES 压缩 ES6 代码")]),s._v(" "),a("li",[s._v("webpack-parallel-uglify-plugin: 多核压缩，提⾼压缩速度")]),s._v(" "),a("li",[s._v("webpack-bundle-analyzer: 可视化webpack输出⽂件的体积")]),s._v(" "),a("li",[s._v("mini-css-extract-plugin: CSS提取到单独的⽂件中，⽀持按需加载")])]),s._v(" "),a("h2",{attrs:{id:"_5-bundle、chunk、module-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-bundle、chunk、module-是什么"}},[s._v("#")]),s._v(" 5. bundle、chunk、module 是什么？")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("module：是开发中的单个模块，在 webpack 的世界，一切皆模块，一个模块对应一个文件，webpack 会从配置的 entry 中递归开始找出所有依赖的模块。")])]),s._v(" "),a("li",[a("p",[s._v("chunk：代码块，一个 chunk 由多个模块组合而成，用于代码的合并和分割；")])]),s._v(" "),a("li",[a("p",[s._v("bundle：是由 webpack 打包出来的文件。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("module")]),s._v("，"),a("code",[s._v("chunk")]),s._v(" 和 "),a("code",[s._v("bundle")]),s._v(" 其实就是"),a("strong",[s._v("同一份逻辑代码在不同转换场景下的取了三个名字")]),s._v("：")]),s._v(" "),a("p",[s._v("我们直接写出来的是 module，webpack 处理时是 chunk，最后生成浏览器可以直接运行的 bundle")])])]),s._v(" "),a("h2",{attrs:{id:"_6-loader-和-plugin-的不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-loader-和-plugin-的不同"}},[s._v("#")]),s._v(" 6. loader 和 plugin 的不同？")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("loade")]),s._v("r 是文件加载器，能够加载资源文件，并对这些文件（"),a("strong",[s._v("特别是非 js 文件，因为 webpack 只能解析 js 文件")]),s._v("）进行一些处理，诸如编译、压缩等，最终一起打包到指定的文件中。"),a("strong",[s._v("它实质是一个转换器。")])]),s._v(" "),a("li",[a("strong",[s._v("plugin")]),s._v(" 赋予了 webpack 各种灵活的功能，例如打包优化、资源管理、环境变量注入等，目的是解决 loader 无法实现的其他事。")]),s._v(" "),a("li",[a("strong",[s._v("运行实际的区别")]),s._v(" "),a("ul",[a("li",[s._v("loader 运行在打包文件之前")]),s._v(" "),a("li",[s._v("plugins 在整个编译周期都起作用")])])])]),s._v(" "),a("h2",{attrs:{id:"_7-webpack-的构建流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-webpack-的构建流程"}},[s._v("#")]),s._v(" 7. webpack 的构建流程")]),s._v(" "),a("p",[a("code",[s._v("webpack")]),s._v(" 的运行流程是一个串行的过程，它的工作流程就是将各个插件串联起来。")]),s._v(" "),a("p",[s._v("在运行过程中会广播事件，插件只需要监听它所关心的事件，就能加入到这条"),a("code",[s._v("webpack")]),s._v("机制中，去改变"),a("code",[s._v("webpack")]),s._v("的运作，使得整个系统扩展性良好")]),s._v(" "),a("p",[s._v("从启动到结束会依次执行以下"),a("strong",[s._v("三大步骤")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("初始化流程：从配置文件和 "),a("code",[s._v("Shell")]),s._v(" 语句中读取与合并参数，并初始化需要使用的插件和配置插件等执行环境所需要的参数")]),s._v(" "),a("li",[s._v("编译构建流程：从 Entry 发出，针对每个 Module 串行调用对应的 Loader 去翻译文件内容，再找到该 Module 依赖的 Module，递归地进行编译处理\n"),a("ul",[a("li",[s._v("初始化完成后会调用"),a("code",[s._v("Compiler")]),s._v("的"),a("code",[s._v("run")]),s._v("来真正启动"),a("code",[s._v("webpack")]),s._v("编译构建流程，主要流程如下：\n"),a("ul",[a("li",[a("code",[s._v("compile")]),s._v(" 开始编译")]),s._v(" "),a("li",[a("code",[s._v("make")]),s._v(" 从入口点分析模块及其依赖的模块，创建这些模块对象")]),s._v(" "),a("li",[a("code",[s._v("build-module")]),s._v(" 构建模块")]),s._v(" "),a("li",[a("code",[s._v("seal")]),s._v(" 封装构建结果")]),s._v(" "),a("li",[a("code",[s._v("emit")]),s._v(" 把各个chunk输出到结果文件")])])])])]),s._v(" "),a("li",[s._v("输出流程：对编译后的 Module 组合成 Chunk，把 Chunk 转换成文件，输出到文件系统")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210911145048061.png",alt:"image-20210911145048061"}})]),s._v(" "),a("h2",{attrs:{id:"_8-编写-loader-或-plugin-的思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-编写-loader-或-plugin-的思路"}},[s._v("#")]),s._v(" 8. 编写 loader 或 plugin 的思路")]),s._v(" "),a("h3",{attrs:{id:"loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[s._v("#")]),s._v(" loader")]),s._v(" "),a("p",[s._v("loader 本质为函数，函数中的 this 作为上下文会被 webpack 填充，因此我们不能将 loader 设为一个箭头函数。")]),s._v(" "),a("p",[s._v("函数接收一个参数，为 webpack 传递 loader 的文件源内容。")]),s._v(" "),a("p",[s._v("函数中 this 是由 webpack 提供的对象，能够获取当前 loader 所需要的各种信息。")]),s._v(" "),a("p",[s._v("函数中有异步操作或同步操作，异步操作通过 this.callback 返回，返回值要求为 string 或者 buffer。")]),s._v(" "),a("p",[s._v("代码如下所示：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导出一个函数，source为webpack传递给loader的文件源内容")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("exports")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" content "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSomeThing2JsString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 loader 配置了 options 对象，那么this.query将指向 options")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" options "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以用作解析其他模块路径的上下文")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'this.context'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n     * this.callback 参数：\n     * error：Error | null，当 loader 出错时向外抛出一个 error\n     * content：String | Buffer，经过 loader 编译后需要导出的内容\n     * sourceMap：为方便调试生成的编译后内容的 source map\n     * ast：本次编译生成的 AST 静态语法树，之后执行的 loader 可以直接使用这个 AST，进而省去重复生成 AST 的过程\n     */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 异步")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 同步")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[s._v("一般在编写"),a("code",[s._v("loader")]),s._v("的过程中，保持功能单一，避免做多种功能")]),s._v(" "),a("p",[s._v("如"),a("code",[s._v("less")]),s._v("文件转换成 "),a("code",[s._v("css")]),s._v("文件也不是一步到位，而是 "),a("code",[s._v("less-loader")]),s._v("、"),a("code",[s._v("css-loader")]),s._v("、"),a("code",[s._v("style-loader")]),s._v("几个 "),a("code",[s._v("loader")]),s._v("的链式调用才能完成转换。")]),s._v(" "),a("h3",{attrs:{id:"plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[s._v("#")]),s._v(" plugin")]),s._v(" "),a("p",[s._v("由于"),a("code",[s._v("webpack")]),s._v("基于发布订阅模式，在运行的生命周期中会广播出许多事件，插件通过监听这些事件，就可以在特定的阶段执行自己的插件任务")]),s._v(" "),a("p",[s._v("在之前也了解过，"),a("code",[s._v("webpack")]),s._v("编译会创建两个核心对象：")]),s._v(" "),a("ul",[a("li",[s._v("compiler：包含了 webpack 环境的所有的配置信息，包括 options，loader 和 plugin，和 webpack 整个生命周期相关的钩子")]),s._v(" "),a("li",[s._v("compilation：作为 plugin 内置事件回调函数的参数，包含了当前的模块资源、编译生成资源、变化的文件以及被跟踪依赖的状态信息。当检测到一个文件变化，一次新的 Compilation 将被创建")])]),s._v(" "),a("p",[s._v("如果自己要实现"),a("code",[s._v("plugin")]),s._v("，也需要遵循一定的规范：")]),s._v(" "),a("ul",[a("li",[s._v("插件必须是一个函数或者是一个包含 "),a("code",[s._v("apply")]),s._v(" 方法的对象，这样才能访问"),a("code",[s._v("compiler")]),s._v("实例")]),s._v(" "),a("li",[s._v("传给每个插件的 "),a("code",[s._v("compiler")]),s._v(" 和 "),a("code",[s._v("compilation")]),s._v(" 对象都是同一个引用，因此不建议修改")]),s._v(" "),a("li",[s._v("异步的事件需要在插件处理完任务时调用回调函数通知 "),a("code",[s._v("Webpack")]),s._v(" 进入下一个流程，不然会卡住")])]),s._v(" "),a("p",[s._v("实现"),a("code",[s._v("plugin")]),s._v("的模板如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyPlugin")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Webpack 会调用 MyPlugin 实例的 apply 方法给插件实例传入 compiler 对象")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("compiler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 找到合适的事件钩子，实现自己的插件功能")]),s._v("\n    compiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("emit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MyPlugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("compilation")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// compilation: 当前打包构建流程的上下文")]),s._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("compilation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// do something...")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("在 "),a("code",[s._v("emit")]),s._v(" 事件发生时，代表源文件的转换和组装已经完成，可以读取到最终将输出的资源、代码块、模块及其依赖，并且可以修改输出资源的内容")]),s._v(" "),a("h2",{attrs:{id:"_9-webpack-的热更新是如何做到的-说明其原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-webpack-的热更新是如何做到的-说明其原因"}},[s._v("#")]),s._v(" 9. webpack 的热更新是如何做到的？说明其原因")]),s._v(" "),a("h3",{attrs:{id:"概念-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-3"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),a("p",[a("code",[s._v("HMR")]),s._v("全称 "),a("code",[s._v("Hot Module Replacement")]),s._v("，可以理解为模块热替换，"),a("strong",[s._v("指在应用程序运行过程中，替换、添加、删除模块，而无需重新刷新整个应用")])]),s._v(" "),a("p",[s._v("例如，我们在应用运行过程中修改了某个模块，通过自动刷新会导致整个应用的整体刷新，那页面中的状态信息都会丢失")]),s._v(" "),a("p",[s._v("如果使用的是 "),a("code",[s._v("HMR")]),s._v("，就可以实现只将修改的模块实时替换至应用中，不必完全刷新整个应用")]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("webpack")]),s._v("中配置开启热模块也非常的简单，如下代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" webpack "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'webpack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n  devServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开启 HMR 特性")]),s._v("\n    hot"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// hotOnly: true")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("通过上述这种配置，如果我们修改并保存"),a("code",[s._v("css")]),s._v("文件，确实能够以不刷新的形式更新到页面中")]),s._v(" "),a("p",[s._v("但是，当我们修改并保存"),a("code",[s._v("js")]),s._v("文件之后，页面依旧自动刷新了，这里并没有触发热模块")]),s._v(" "),a("p",[s._v("所以，"),a("code",[s._v("HMR")]),s._v("并不像 "),a("code",[s._v("Webpack")]),s._v(" 的其他特性一样可以开箱即用，需要有一些额外的操作")]),s._v(" "),a("p",[s._v("我们需要去指定哪些模块发生更新时进行"),a("code",[s._v("HRM")]),s._v("，如下代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("accept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./util.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"util.js更新了"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[s._v("#")]),s._v(" 实现原理")]),s._v(" "),a("p",[s._v("首先来看看一张图，如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210911161059530.png",alt:"image-20210911161059530"}})]),s._v(" "),a("ul",[a("li",[s._v("Webpack Compile：将 JS 源代码编译成 bundle.js")]),s._v(" "),a("li",[s._v("HMR Server：用来将热更新的文件输出给 HMR Runtime")]),s._v(" "),a("li",[s._v("Bundle Server：静态资源文件服务器，提供文件访问路径")]),s._v(" "),a("li",[s._v("HMR Runtime：socket服务器，会被注入到浏览器，更新文件的变化")]),s._v(" "),a("li",[s._v("bundle.js：构建输出的文件")]),s._v(" "),a("li",[s._v("在HMR Runtime 和 HMR Server之间建立 websocket，即图上4号线，用于实时更新文件变化")])]),s._v(" "),a("p",[s._v("上面图中，可以分成两个阶段：")]),s._v(" "),a("ul",[a("li",[s._v("启动阶段为上图 1 - 2 - A - B")])]),s._v(" "),a("p",[s._v("在编写未经过"),a("code",[s._v("webpack")]),s._v("打包的源代码后，"),a("code",[s._v("Webpack Compile")]),s._v(" 将源代码和 "),a("code",[s._v("HMR Runtime")]),s._v(" 一起编译成 "),a("code",[s._v("bundle")]),s._v("文件，传输给"),a("code",[s._v("Bundle Server")]),s._v(" 静态资源服务器")]),s._v(" "),a("ul",[a("li",[s._v("更新阶段为上图 1 - 2 - 3 - 4")])]),s._v(" "),a("p",[s._v("当某一个文件或者模块发生变化时，"),a("code",[s._v("webpack")]),s._v("监听到文件变化对文件重新编译打包，编译生成唯一的"),a("code",[s._v("hash")]),s._v("值，这个"),a("code",[s._v("hash")]),s._v("值用来作为下一次热更新的标识")]),s._v(" "),a("p",[s._v("根据变化的内容生成两个补丁文件："),a("code",[s._v("manifest")]),s._v("（包含了 "),a("code",[s._v("hash")]),s._v(" 和 "),a("code",[s._v("chundId")]),s._v("，用来说明变化的内容）和"),a("code",[s._v("chunk.js")]),s._v(" 模块")]),s._v(" "),a("p",[s._v("由于"),a("code",[s._v("socket")]),s._v("服务器在"),a("code",[s._v("HMR Runtime")]),s._v(" 和 "),a("code",[s._v("HMR Server")]),s._v("之间建立 "),a("code",[s._v("websocket")]),s._v("链接，当文件发生改动的时候，服务端会向浏览器推送一条消息，消息包含文件改动后生成的"),a("code",[s._v("hash")]),s._v("值，如下图的"),a("code",[s._v("h")]),s._v("属性，作为下一次热更细的标识")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210911161127161.png",alt:"image-20210911161127161"}})]),s._v(" "),a("p",[s._v("在浏览器接受到这条消息之前，浏览器已经在上一次"),a("code",[s._v("socket")]),s._v(" 消息中已经记住了此时的"),a("code",[s._v("hash")]),s._v(" 标识，这时候我们会创建一个 "),a("code",[s._v("ajax")]),s._v(" 去服务端请求获取到变化内容的 "),a("code",[s._v("manifest")]),s._v(" 文件")]),s._v(" "),a("p",[a("code",[s._v("mainfest")]),s._v("文件包含重新"),a("code",[s._v("build")]),s._v("生成的"),a("code",[s._v("hash")]),s._v("值，以及变化的模块，对应上图的"),a("code",[s._v("c")]),s._v("属性")]),s._v(" "),a("p",[s._v("浏览器根据 "),a("code",[s._v("manifest")]),s._v(" 文件获取模块变化的内容，从而触发"),a("code",[s._v("render")]),s._v("流程，实现局部模块更新")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210911161143404.png",alt:"image-20210911161143404"}})]),s._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("关于"),a("code",[s._v("webpack")]),s._v("热模块更新的总结如下：")]),s._v(" "),a("ul",[a("li",[s._v("通过"),a("code",[s._v("webpack-dev-server")]),s._v("创建两个服务器：提供静态资源的服务（express）和Socket服务")]),s._v(" "),a("li",[s._v("express server 负责直接提供静态资源的服务（打包后的资源直接被浏览器请求和解析）")]),s._v(" "),a("li",[s._v("socket server 是一个 websocket 的长连接，双方可以通信")]),s._v(" "),a("li",[s._v("当 socket server 监听到对应的模块发生变化时，会生成两个文件.json（manifest文件）和.js文件（update chunk）")]),s._v(" "),a("li",[s._v("通过长连接，socket server 可以直接将这两个文件主动发送给客户端（浏览器）")]),s._v(" "),a("li",[s._v("浏览器拿到两个新的文件后，通过HMR runtime机制，加载这两个文件，并且针对修改的模块进行更新")])]),s._v(" "),a("h2",{attrs:{id:"_10-如何用-webpack-来优化前端性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-如何用-webpack-来优化前端性能"}},[s._v("#")]),s._v(" 10. 如何用 webpack 来优化前端性能？")]),s._v(" "),a("p",[s._v("通过"),a("code",[s._v("webpack")]),s._v("优化前端的手段有：")]),s._v(" "),a("ul",[a("li",[s._v("JS 代码压缩")]),s._v(" "),a("li",[s._v("CSS 代码压缩")]),s._v(" "),a("li",[s._v("Html 文件代码压缩")]),s._v(" "),a("li",[s._v("文件大小压缩，对文件的大小进行压缩，减少"),a("code",[s._v("http")]),s._v("传输过程中宽带的损耗")]),s._v(" "),a("li",[s._v("图片压缩")]),s._v(" "),a("li",[s._v("Tree Shaking，在计算机中表示消除死代码，依赖于"),a("code",[s._v("ES Module")]),s._v("的静态语法分析（不执行任何的代码，可以明确知道模块的依赖关系）")]),s._v(" "),a("li",[s._v("代码分离，之后我们可以按需加载，或者并行加载这些文件")]),s._v(" "),a("li",[s._v("内联 chunk")])]),s._v(" "),a("h1",{attrs:{id:"三、其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、其他"}},[s._v("#")]),s._v(" 三、其他")]),s._v(" "),a("h3",{attrs:{id:"_1-babel-的原理是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-babel-的原理是什么"}},[s._v("#")]),s._v(" 1. babel 的原理是什么")]),s._v(" "),a("p",[s._v("babel 的转译过程也分为三个阶段，这三步具体是：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("解析 Parse")]),s._v(": 将代码解析⽣成抽象语法树（AST），即词法分析与语法分析的过程；")]),s._v(" "),a("li",[a("strong",[s._v("转换 Transform")]),s._v(": 对于 AST 进⾏变换⼀系列的操作，babel 接受得到 AST 并通过 babel-traverse 对其进⾏遍历，在此过程中进⾏添加、更新及移除等操作；")]),s._v(" "),a("li",[a("strong",[s._v("⽣成 Generate")]),s._v(": 将变换后的 AST 再转换为 JS 代码, 使⽤到的模块是 babel-generator。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/dadadaxyx/my-images/raw/master/image-20210911161844145.png",alt:"image-20210911161844145"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);